using System.Net.Http;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;

namespace YourNamespace
{
    public static class HttpClientWrapper
    {
        public static IHttpClientBuilder AddLoggingDistributedMessageHandler(
            this IHttpClientBuilder builder,
            ILogger<LoggingDistributedMessageHandler> logger)
        {
            return builder.AddHttpMessageHandler<LoggingDistributedMessageHandler>()
                          .AddHttpMessageHandler<DistributedMessageHandler>()
                          .AddPolicyHandler(GetRetryPolicy())
                          .ConfigurePrimaryHttpMessageHandler(() => new HttpClientHandler())
                          .ConfigureHttpClient(client => client.Timeout = TimeSpan.FromSeconds(30))
                          .ConfigureServices(services => services.AddTransient<LoggingDistributedMessageHandler>());
        }

        private static IAsyncPolicy<HttpResponseMessage> GetRetryPolicy()
        {
            // Implement your retry policy logic here
            // For example, Polly's Retry policy
            return Policy<HttpResponseMessage>
                .Handle<SomeExceptionType>()
                .RetryAsync(3, (ex, retryCount, context) =>
                {
                    // Log the retry information if needed
                });
        }
    }
}
