using Castle.DynamicProxy;
using Serilog;

public class LoggingInterceptor : IInterceptor
{
    public void Intercept(IInvocation invocation)
    {
        var logContext = invocation.Arguments.FirstOrDefault(x => x is LogContext) as LogContext ?? new LogContext();
        logContext.StartTime = DateTime.UtcNow;

        try
        {
            invocation.Proceed(); // Call the intercepted method

            // Log method completion
            Log.Information($"Method {invocation.Method.Name} completed successfully.", logContext);
        }
        catch (Exception ex)
        {
            logContext.ErrorMessage = ex.Message;
            logContext.ErrorType = ex.GetType().FullName;

            // Log exception
            Log.Error(ex, $"An error occurred in method {invocation.Method.Name}.", logContext);

            // Rethrow the exception
            throw;
        }
    }
}
